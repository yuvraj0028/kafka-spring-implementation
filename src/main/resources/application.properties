# application configuration
spring.application.name=Kafka
server.port=9091

# context path
server.servlet.context-path=/kafka/api/v1

# mock url
mock.url=https://fakestoreapi.com/products

# postgres configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/
spring.datasource.username=<YOUR_USERNAME>
spring.datasource.password=<YOUR_PASSWORD>
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# HikariCP Connection Pooling
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000

# Kafka configuration
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=product-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Redis configuration
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.cache.redis.cache-null-values=true
spring.cache.redis.time-to-live=40000